-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.authors
(
    author_id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    date_of_birth date,
    nationality character varying(50) COLLATE pg_catalog."default",
    biography text COLLATE pg_catalog."default",
    CONSTRAINT authors_pkey PRIMARY KEY (author_id)
);

CREATE TABLE IF NOT EXISTS public.book_author
(
    book_id integer NOT NULL,
    author_id integer NOT NULL,
    CONSTRAINT book_author_pkey PRIMARY KEY (book_id, author_id)
);

CREATE TABLE IF NOT EXISTS public.books
(
    book_id serial NOT NULL,
    title character varying(150) COLLATE pg_catalog."default" NOT NULL,
    publisher_id integer,
    category_id integer,
    isbn character varying(20) COLLATE pg_catalog."default",
    edition character varying(50) COLLATE pg_catalog."default",
    year_published integer,
    price numeric(10, 2),
    total_copies integer DEFAULT 1,
    available_copies integer DEFAULT 1,
    CONSTRAINT books_pkey PRIMARY KEY (book_id),
    CONSTRAINT books_isbn_key UNIQUE (isbn)
);

CREATE TABLE IF NOT EXISTS public.categories
(
    category_id serial NOT NULL,
    category_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    CONSTRAINT categories_pkey PRIMARY KEY (category_id)
);

CREATE TABLE IF NOT EXISTS public.members
(
    member_id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    date_of_birth date,
    address character varying(255) COLLATE pg_catalog."default",
    phone character varying(15) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    membership_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    membership_type character varying(20) COLLATE pg_catalog."default" DEFAULT 'Student'::character varying,
    status character varying(20) COLLATE pg_catalog."default" DEFAULT 'Active'::character varying,
    CONSTRAINT members_pkey PRIMARY KEY (member_id),
    CONSTRAINT members_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.publishers
(
    publisher_id serial NOT NULL,
    publisher_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    address character varying(255) COLLATE pg_catalog."default",
    phone character varying(15) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT publishers_pkey PRIMARY KEY (publisher_id),
    CONSTRAINT publishers_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.reservations
(
    reservation_id serial NOT NULL,
    book_id integer,
    member_id integer,
    reservation_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    status character varying(20) COLLATE pg_catalog."default" DEFAULT 'Pending'::character varying,
    CONSTRAINT reservations_pkey PRIMARY KEY (reservation_id)
);

CREATE TABLE IF NOT EXISTS public.staff
(
    staff_id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    role character varying(20) COLLATE pg_catalog."default" DEFAULT 'Librarian'::character varying,
    phone character varying(15) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    hire_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    salary numeric(10, 2),
    CONSTRAINT staff_pkey PRIMARY KEY (staff_id),
    CONSTRAINT staff_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.transactions
(
    transaction_id serial NOT NULL,
    book_id integer,
    member_id integer,
    staff_id integer,
    issue_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    due_date date,
    return_date date,
    fine numeric(8, 2) DEFAULT 0,
    CONSTRAINT transactions_pkey PRIMARY KEY (transaction_id)
);

ALTER TABLE IF EXISTS public.book_author
    ADD CONSTRAINT book_author_author_id_fkey FOREIGN KEY (author_id)
    REFERENCES public.authors (author_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.book_author
    ADD CONSTRAINT book_author_book_id_fkey FOREIGN KEY (book_id)
    REFERENCES public.books (book_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.books
    ADD CONSTRAINT books_category_id_fkey FOREIGN KEY (category_id)
    REFERENCES public.categories (category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.books
    ADD CONSTRAINT books_publisher_id_fkey FOREIGN KEY (publisher_id)
    REFERENCES public.publishers (publisher_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reservations
    ADD CONSTRAINT reservations_book_id_fkey FOREIGN KEY (book_id)
    REFERENCES public.books (book_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reservations
    ADD CONSTRAINT reservations_member_id_fkey FOREIGN KEY (member_id)
    REFERENCES public.members (member_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transactions
    ADD CONSTRAINT transactions_book_id_fkey FOREIGN KEY (book_id)
    REFERENCES public.books (book_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transactions
    ADD CONSTRAINT transactions_member_id_fkey FOREIGN KEY (member_id)
    REFERENCES public.members (member_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transactions
    ADD CONSTRAINT transactions_staff_id_fkey FOREIGN KEY (staff_id)
    REFERENCES public.staff (staff_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;